---
title: "Mixed Yue"
format: html
editor: visual
---

```{r}
# Using normal way without rjags.

library(ggplot2)
library(dplyr)

# Function to compute exact conditional likelihood for binomial-Beta model
compute_Cj_exact <- function(a_j, b_j, x, n) {
  choose(n, x) * beta(a_j + x, b_j + n - x) / beta(a_j, b_j)
}

set.seed(123)

# Input data
adult_placebo_n <- 494; adult_placebo_r <- 45
adult_drug_n <- 509; adult_drug_r <- 375
ped_placebo_n <- 6; ped_placebo_r <- 1
ped_drug_n <- 30; ped_drug_r <- 15

# Parameters
n_samples <- 10000
alpha_skeptical <- 1; beta_skeptical <- 1

# Prior parameters from adult data
alpha_adult_placebo <- adult_placebo_r + 1
beta_adult_placebo <- adult_placebo_n - adult_placebo_r + 1
alpha_adult_drug <- adult_drug_r + 1
beta_adult_drug <- adult_drug_n - adult_drug_r + 1

# Posterior from pediatric data only (used for ESS calculation)
alpha_ped_placebo <- ped_placebo_r + 1
beta_ped_placebo <- ped_placebo_n - ped_placebo_r + 1
alpha_ped_drug <- ped_drug_r + 1
beta_ped_drug <- ped_drug_n - ped_drug_r + 1

# Variance with no prior (reference for ESS)
var_placebo_no_prior <- (alpha_ped_placebo * beta_ped_placebo) / 
  ((alpha_ped_placebo + beta_ped_placebo)^2 * (alpha_ped_placebo + beta_ped_placebo + 1))
var_drug_no_prior <- (alpha_ped_drug * beta_ped_drug) /
  ((alpha_ped_drug + beta_ped_drug)^2 * (alpha_ped_drug + beta_ped_drug + 1))

# Initialize results
results <- data.frame(
  k = numeric(),
  k_treat = numeric(),
  k_control = numeric(),
  ci_lower = numeric(),
  ci_upper = numeric(),
  median_diff = numeric(),
  ESS_placebo = numeric(),
  ESS_drug = numeric(),
  prob_superior = numeric()
)

# Main loop: vary initial weight from 0 to 1
for (k in seq(0, 1, by = 0.02)) {
  
  # 1. Compute treatment group weight
  C_treat <- c(
    compute_Cj_exact(alpha_adult_drug, beta_adult_drug, ped_drug_r, ped_drug_n),
    compute_Cj_exact(alpha_skeptical, beta_skeptical, ped_drug_r, ped_drug_n)
  )
  k1_treat <- (k * C_treat[1]) / (k * C_treat[1] + (1 - k) * C_treat[2])
  
  # 2. Compute control group weight
  C_control <- c(
    compute_Cj_exact(alpha_adult_placebo, beta_adult_placebo, ped_placebo_r, ped_placebo_n),
    compute_Cj_exact(alpha_skeptical, beta_skeptical, ped_placebo_r, ped_placebo_n)
  )
  k1_control <- (k * C_control[1]) / (k * C_control[1] + (1 - k) * C_control[2])
  
  # 3. Posterior parameters (weighted mixture)
  alpha_post_drug_adult <- alpha_adult_drug + ped_drug_r
  beta_post_drug_adult <- beta_adult_drug + ped_drug_n - ped_drug_r
  alpha_post_drug_skeptical <- alpha_skeptical + ped_drug_r
  beta_post_drug_skeptical <- beta_skeptical + ped_drug_n - ped_drug_r
  
  alpha_post_placebo_adult <- alpha_adult_placebo + ped_placebo_r
  beta_post_placebo_adult <- beta_adult_placebo + ped_placebo_n - ped_placebo_r
  alpha_post_placebo_skeptical <- alpha_skeptical + ped_placebo_r
  beta_post_placebo_skeptical <- beta_skeptical + ped_placebo_n - ped_placebo_r
  
  # 4. Sample from posterior mixture
  mix_drug <- runif(n_samples) < k1_treat
  samples_drug <- ifelse(
    mix_drug,
    rbeta(n_samples, alpha_post_drug_adult, beta_post_drug_adult),
    rbeta(n_samples, alpha_post_drug_skeptical, beta_post_drug_skeptical)
  )
  
  mix_placebo <- runif(n_samples) < k1_control
  samples_placebo <- ifelse(
    mix_placebo,
    rbeta(n_samples, alpha_post_placebo_adult, beta_post_placebo_adult),
    rbeta(n_samples, alpha_post_placebo_skeptical, beta_post_placebo_skeptical)
  )
  
  # 5. Compute posterior difference
  diff <- samples_drug - samples_placebo
  ci <- quantile(diff, c(0.025, 0.975))
  
  # 6. Store results
  results <- rbind(results, data.frame(
    k = k,
    k_treat = k1_treat,
    k_control = k1_control,
    ci_lower = ci[1],
    ci_upper = ci[2],
    median_diff = median(diff),
    ESS_placebo = max(0, ped_placebo_n * (var_placebo_no_prior / var(samples_placebo) - 1)),
    ESS_drug = max(0, ped_drug_n * (var_drug_no_prior / var(samples_drug) - 1)),
    prob_superior = mean(diff > 0)
  ))
}

# Identify tipping point (first k where 95% CI is fully > 0)
tipping_point <- results %>% 
  filter(ci_lower > 0) %>% 
  slice(1)

cat("Tipping Point Analysis:\n")
cat("Initial Weight (k):", tipping_point$k, "\n")
cat("Actual Weights Used:\n")
cat("  Treatment:", round(tipping_point$k_treat, 3), "\n")
cat("  Control:", round(tipping_point$k_control, 3), "\n")
cat("Response Rate Difference:", round(tipping_point$median_diff, 3), "\n")
cat("95% CI: [", round(tipping_point$ci_lower, 3), ",", round(tipping_point$ci_upper, 3), "]\n")
cat("Pr(Drug > Placebo):", round(tipping_point$prob_superior, 3), "\n")
cat("ESS (Treatment):", round(tipping_point$ESS_drug, 1), "\n")
cat("ESS (Control):", round(tipping_point$ESS_placebo, 1), "\n")

# Visualization
ggplot(results, aes(x = k, y = median_diff)) +
  geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper), fill = "lightblue", alpha = 0.5) +
  geom_line(color = "blue", size = 1) +
  geom_vline(xintercept = tipping_point$k, linetype = "dashed", color = "red") +
  annotate("text", 
           x = tipping_point$k, 
           y = tipping_point$median_diff + 0.02, 
           label = paste0("Tipping point\nk = ", round(tipping_point$k, 3), 
                          "\nk_treat = ", round(tipping_point$k_treat, 3)), 
           color = "red", hjust = -0.1) +
  labs(x = "Initial Weight (k)",
       y = "Posterior Median of Drug - Placebo",
       title = "Tipping Point Analysis with 95% CI") +
  theme_minimal(base_size = 14)

```

```{r}
# Using JAGS for Bayesian updating

library(rjags)
library(coda)
library(dplyr)
library(ggplot2)

# JAGS model: beta-binomial updating
model_string <- "
model {
  x ~ dbin(theta, n)
  theta ~ dbeta(a, b)
}
"

# Data
adult_placebo_n <- 494; adult_placebo_r <- 45
adult_drug_n <- 509; adult_drug_r <- 375
ped_placebo_n <- 6; ped_placebo_r <- 1
ped_drug_n <- 30; ped_drug_r <- 15

# Prior parameters
alpha_skeptical <- 1; beta_skeptical <- 1
alpha_adult_placebo <- adult_placebo_r + 1
beta_adult_placebo <- adult_placebo_n - adult_placebo_r + 1
alpha_adult_drug <- adult_drug_r + 1
beta_adult_drug <- adult_drug_n - adult_drug_r + 1

# For ESS calculation
var_placebo_no_prior <- (1 * 6) / (7^2 * 8)
var_drug_no_prior <- (16 * 16) / (32^2 * 33)

# Sampling function
run_jags_model <- function(a, b, x, n, n_iter = 10000) {
  data_jags <- list(a = a, b = b, x = x, n = n)
  jags_model <- jags.model(textConnection(model_string),
                           data = data_jags,
                           n.chains = 1,
                           quiet = TRUE)
  update(jags_model, 1000, progress.bar = "none")
  samples <- coda.samples(jags_model, variable.names = "theta", 
                          n.iter = n_iter, progress.bar = "none")
  return(as.numeric(samples[[1]]))
}

# Main loop
n_samples <- 10000
results <- data.frame()

compute_Cj_exact <- function(a_j, b_j, x, n) {
  choose(n, x) * beta(a_j + x, b_j + n - x) / beta(a_j, b_j)
}

for (k in seq(0, 1, by = 0.02)) {

  # Marginal likelihoods
  C_treat <- c(
    compute_Cj_exact(alpha_adult_drug, beta_adult_drug, ped_drug_r, ped_drug_n),
    compute_Cj_exact(alpha_skeptical, beta_skeptical, ped_drug_r, ped_drug_n)
  )
  k1_treat <- (k * C_treat[1]) / (k * C_treat[1] + (1 - k) * C_treat[2])

  C_control <- c(
    compute_Cj_exact(alpha_adult_placebo, beta_adult_placebo, ped_placebo_r, ped_placebo_n),
    compute_Cj_exact(alpha_skeptical, beta_skeptical, ped_placebo_r, ped_placebo_n)
  )
  k1_control <- (k * C_control[1]) / (k * C_control[1] + (1 - k) * C_control[2])

  # Sample posteriors
  samples_drug_adult <- run_jags_model(alpha_adult_drug, beta_adult_drug, ped_drug_r, ped_drug_n)
  samples_drug_skeptical <- run_jags_model(alpha_skeptical, beta_skeptical, ped_drug_r, ped_drug_n)
  samples_placebo_adult <- run_jags_model(alpha_adult_placebo, beta_adult_placebo, ped_placebo_r, ped_placebo_n)
  samples_placebo_skeptical <- run_jags_model(alpha_skeptical, beta_skeptical, ped_placebo_r, ped_placebo_n)

  # Mixture sampling
  mix_drug <- runif(n_samples) < k1_treat
  mix_placebo <- runif(n_samples) < k1_control
  samples_drug <- ifelse(mix_drug, samples_drug_adult, samples_drug_skeptical)
  samples_placebo <- ifelse(mix_placebo, samples_placebo_adult, samples_placebo_skeptical)

  diff <- samples_drug - samples_placebo
  ci <- quantile(diff, c(0.025, 0.975))
  
  # ESS calculation
  ESS_drug <- max(0, ped_drug_n * (var_drug_no_prior / var(samples_drug) - 1))
  ESS_placebo <- max(0, ped_placebo_n * (var_placebo_no_prior / var(samples_placebo) - 1))

  results <- rbind(results, data.frame(
    k = k,
    k_treat = k1_treat,
    k_control = k1_control,
    ci_lower = ci[1],
    ci_upper = ci[2],
    median_diff = median(diff),
    ESS_placebo = ESS_placebo,
    ESS_drug = ESS_drug,
    prob_superior = mean(diff > 0)
  ))
}

# Find tipping point
tipping_point <- results %>%
  filter(ci_lower > 0) %>%
  slice(1)

cat("Tipping Point Analysis:\n")
cat("Initial Weight (k):", tipping_point$k, "\n")
cat("Actual Weights Used:\n")
cat("  Treatment:", round(tipping_point$k_treat, 3), "\n")
cat("  Control:", round(tipping_point$k_control, 3), "\n")
cat("Response Rate Difference:", round(tipping_point$median_diff, 3), "\n")
cat("95% CI: [", round(tipping_point$ci_lower, 3), ",", round(tipping_point$ci_upper, 3), "]\n")
cat("Pr(Drug > Placebo):", round(tipping_point$prob_superior, 3), "\n")
cat("ESS (Treatment):", round(tipping_point$ESS_drug, 1), "\n")
cat("ESS (Control):", round(tipping_point$ESS_placebo, 1), "\n")


    
```

